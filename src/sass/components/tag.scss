@import "bourbon";
@import "../global/variables";

.tags {
	margin-left: 16px;
	z-index: 10;
	position: relative;

	@include responds-to (mobile) {
		margin-left: 6px;
	}
}


@mixin tag-selected($showEllipsis: true){
	background: $invertedColor;
	border-color: $invertedColorWeak;
	color: $invertedColorVeryWeak;

	@if $showEllipsis == true {
		.tag__text {
			@include transition-delay($animQuick);
			margin: 0 6px 0 4px;
		}

		.tag__more {
			@include transition-delay($animQuick);
			padding: 1px 1px 0 1px;
			width: 22px;
		}
	}
}


.tag {
	@extend %flex-row-inline;
	@include transition-property(opacity, color);
	@include transition-duration($animNormal);
	@include transition-timing-function(ease-in-out);
	position: relative;
	font: $fontTag;
	padding: 3px 0;
	margin: 3px 6px 3px 0;
	border: 1px solid $colorWeak;
	background: $colorVeryWeak;
	color: $color;
	border-radius: 6px;
	cursor: pointer;

	@include responds-to (mobile) {
		margin: 4px 6px 6px 0;
	}

	&:hover { //:not(.tag--hidden)
		@include responds-to (widescreen) {
			@include tag-selected();
		}
	}
}

.tag__text {
	margin: 0 16px;
	@include transition(margin $animQuick ease-in-out);

	@include responds-to (mobile) {
		margin: 0 6px;
		font-size: 11px;
	}
}

.tag__more {
	@include icon($icon: more);
	@extend %flex-row-inline;
	@include transform(scale(0.75, 1));
	@include transition-property(width, padding);
	@include transition-duration($animQuick);
	@include transition-timing-function(ease-in-out);
	position: relative;
	overflow: hidden;
	width: 0;
	padding: 1px 0 0 0;
	height: 8px;
	line-height: 8px;
	font-size: 20px;
	margin: 0 2px 0 -4px;
	color: $invertedColorVeryWeak;

	@include responds-to (mobile) {
		display: none;
	}
}


.tag--expanded {
	$arrowOffset: 20px;
	$arrowSize: 16px;

	@include responds-to (widescreen) {
		@include tag-selected();
	}
	@include responds-to (mobile) {
		@include tag-selected(false);
	}

	&:before, &:after {
		@include position(absolute, -1 * $arrowOffset null null 50%);
		content: "";
		width: 0;
		height: 0;
		margin-left: -1 * $arrowOffset;
		border-style: solid;
		border-width: $arrowSize $arrowSize 0 $arrowSize;
		z-index: 2;
	}

	&:before {
		top: (-1 * $arrowOffset) + 1px;
		border-color: $invertedColorWeak transparent transparent transparent;
	}

	&:after {
		border-color: $invertedColor transparent transparent transparent;
	}
}


.tag--hidden {
	&:not(.tag--expanded) {
		opacity: 0.4;
		color: $colorVeryStrong;
		background: white;
	}

	&:hover {
		color: $color;
		opacity: 1;
		background: $colorVeryWeak;
	}
}